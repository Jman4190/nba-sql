"""
Misc utilities.
"""


def season_id_to_int(season_id):
    """
    Util to convert a season_id to an int.
    """
    return int(season_id[:4])


def get_rowset_mapping(result_sets, column_names):
    """
    Returns a list of mapped fields to the passed headers.
    """

    headers = result_sets['headers']
    return {column: headers.index(column.upper()) for column in column_names}


def column_names_from_table(db, table_name):
    """
    Gets the column names from a db table.
    """

    columns = db.get_columns(table_name)
    mapped = [column.name for column in columns]

    # season_id is our construct, and isn't returned by any NBA endpoint.
    if 'season_id' in mapped:
        mapped.remove('season_id')

    # Ignore autogenerated id columns.
    if 'id' in mapped:
        mapped.remove('id')

    return mapped

def chunk_list(in_list, n):
    """
    Chunk list into lists of length n.
    """
    return [in_list[i:i + n] for i in range(0, len(in_list), n)]


def progress_bar(iterable, prefix='', suffix='', decimals=1, length=100, fill='â–ˆ', printEnd="\r"):
    """
    https://stackoverflow.com/questions/3173320/text-progress-bar-in-the-console
    Call in a loop to create terminal progress bar
    @params:
    iteration   - Required  : current iteration (Int)
    total       - Required  : total iterations (Int)
    prefix      - Optional  : prefix string (Str)
    suffix      - Optional  : suffix string (Str)
    decimals    - Optional  : number of decimals in percent complete (Int)
    length      - Optional  : character length of bar (Int)
    fill        - Optional  : bar fill character (Str)
    printEnd    - Optional  : end character (e.g. "\r", "\r\n") (Str)
    """
    total = 1
    if iterable:
        total = len(iterable)

    # Progress Bar Printing Function
    def printProgressBar(iteration):
        percent = (
            ("{0:." + str(decimals) + "f}")
            .format(100 * (iteration / float(total)))
        )
        filledLength = int(length * iteration // total)
        bar = fill * filledLength + '-' * (length - filledLength)
        print(f'\r{prefix} |{bar}| {percent}% {suffix}', end=printEnd)
    # Initial Call
    printProgressBar(0)
    # Update Progress Bar
    for i, item in enumerate(iterable):
        yield item
        printProgressBar(i + 1)
    # Print New Line on Complete
    print()


